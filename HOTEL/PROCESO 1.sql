-- FUNCION
USE `hotel`;
DROP function IF EXISTS `F_DESCUENTO`;

DELIMITER $$
USE `hotel`$$
CREATE FUNCTION `F_DESCUENTO` (
FECHA_ING TIMESTAMP, 
PRECIO FLOAT)
RETURNS FLOAT(10,2)
DETERMINISTIC
BEGIN
    IF DATEDIFF(FECHA_ING, CURDATE()) >= 15 THEN 
		RETURN PRECIO * 0.90;
	ELSE
		RETURN PRECIO;
	END IF;
END$$

DELIMITER ;

-- PROCEDIMIENTO ALM
USE `hotel`;
DROP procedure IF EXISTS `P_RESERVACION`;

DELIMITER $$
USE `hotel`$$
CREATE PROCEDURE `P_RESERVACION` (
IN P_ID_HABITACION INT, 
IN P_ID_CLIENTE INT, 
IN P_PRECIO FLOAT, 
IN P_FECHA_ING TIMESTAMP,
IN P_FECHA_SAL TIMESTAMP,
OUT PRECIO_FINAL FLOAT)
BEGIN
	SET PRECIO_FINAL = F_DESCUENTO(FECHA_ING, PRECIO);
    INSERT INTO RESERVACION(ID_HABITACION, ID_CLIENTE, PRECIO, FECHA_ING, FECHA_SAL, FEHCA_RES) 
    VALUES (P_ID_HABITACION, P_ID_CLIENTE, PRECIO_FINAL, P_FECHA_ING, P_FECHA_SAL, NOW());
END$$

DELIMITER ;

-- TRIGGER
DELIMITER $$
CREATE TRIGGER T_ESTADO_RESERVADO
AFTER INSERT ON RESERVACION
FOR EACH ROW
BEGIN
	UPDATE HABITACION
    SET ID_ESTADO = 0
    WHERE ID_HABITACION = NEW.ID_HABITACION;
END$$