-- FUNCION
USE `hotel`;
DROP function IF EXISTS `F_TOTAL_SALIDA`;

DELIMITER $$
USE `hotel`$$
CREATE FUNCTION `F_TOTAL_SALIDA` (
FECHA_ING DATE, 
FECHA_SAL DATE, 
PRECIO FLOAT)
RETURNS FLOAT
DETERMINISTIC
BEGIN
	DECLARE PRECIO_TOTAL FLOAT;
    SET PRECIO_TOTAL = DATEDIFF(FECHA_SAL, FECHA_ING) * PRECIO; -- DE IZQUIERDA A DERECHA CUENTA POSITIVAMENTE O SUMA COMO SEA
	RETURN PRECIO_TOTAL;
END$$

DELIMITER ;

-- PROCEDIMIENTO ALM
USE `hotel`;
DROP procedure IF EXISTS `ACTUALIZAR_RESERVACION`;

DELIMITER $$
USE `hotel`$$
CREATE PROCEDURE `ACTUALIZAR_RESERVACION` (
IN P_ID_RESERVACION INT,
IN P_FECHA_ING DATE,
IN P_FECHA_SAL DATE,
IN P_PRECIO FLOAT,
OUT P_TOTAL FLOAT)
BEGIN
	IF P_FECHA_SALIDA IS NULL THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'LA FECHA DE SALIDA NO PUEDE ESTAR VACIA';
    END IF;
    
	SET P_TOTAL = F_TOTAL_SALIDA(P_FECHA_ING, P_FECHA_SAL, P_PRECIO);
	UPDATE RESERVACION
    SET TOTAL = P_TOTAL
    WHERE ID_RESERVACION = P_ID_RESERVACION;
END$$

DELIMITER ;

-- TRIGGER
DELIMITER $$
CREATE TRIGGER T_ESTADO_DISPONIBLE
AFTER UPDATE ON RESERVACION
FOR EACH ROW
BEGIN
	IF NEW.FECHA_SAL IS NOT NULL THEN
	UPDATE HABITACION
    SET ID_ESTADO = 1
    WHERE ID_HABITACION = NEW.ID_HABITACION;
    END IF;
END$$